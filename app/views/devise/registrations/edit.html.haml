%h2
  #{t('.edit')} #{resource_name.to_s.humanize}
= simple_form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put, multipart: true }) do |f|
  = devise_error_messages!
  .form-inputs
    = f.input :first_name, autofocus: true
    = f.input :last_name
    = f.input :nickname
    = f.input :birthday, as: :date_picker
    = f.input :email, autofocus: true, autocomplete: "email"
    - if current_user.avatar.url.present?
      = image_tag(current_user.avatar.url) 
      = f.label :remove_avatar
      = f.check_box :remove_avatar 
    = f.file_field :avatar  
    = f.hidden_field :avatar_cache
    - if devise_mapping.confirmable? && resource.pending_reconfirmation?
      %div
        #{t('.currently_waiting_confirmation_for')}: #{resource.unconfirmed_email}
    %i= t('.leave_blank_if_no_change')
    %br/
    = f.input :password, autocomplete: "off"
    - if @minimum_password_length
      %br/
      %em
        = @minimum_password_length
        = t('.characters_minimum')
    = f.input :password_confirmation, autocomplete: "off"
    %i= t('.we_need_password_to_confirm')
    %br/
    = f.input :current_password, autocomplete: "off"
  .form-actions
    = f.submit t('.update')
%h3= t('.cancel_my_account')
%p
  #{t('.unhappy')} #{button_to t('.cancel_my_account'), registration_path(resource_name), data: { confirm: t('messages.destruction_confirmation') }, method: :delete}
= link_to "Back", :back
